#version 450
#extension GL_ARB_separate_shader_objects : enable

#define WORKGROUP_SIZE 32
layout (local_size_x = WORKGROUP_SIZE, local_size_y = 1, local_size_z = 1) in;

struct Particle
{
	vec4 position;
	vec4 direction;
};

layout(std140, binding = 0) buffer particleBuffer 
{
   Particle particles[];
};

layout (constant_id = 0) const float c_gravity = 0.0002;
layout (constant_id = 1) const int c_numParticles = 1024;

void main() 
{
	uint index = gl_GlobalInvocationID.x;
	if (index >= c_numParticles)
  {
		return;	
  }

	vec4 position = particles[index].position;
	vec4 direction = vec4(0.0);

	for (int i = 0; i < c_numParticles; ++i)
	{
    if (i == index)
    {
      continue;
    }
		vec4 other = particles[i].position;
		vec3 forceDirection = other.xyz - position.xyz;
    float distance = dot(forceDirection, forceDirection);
		direction.xyz += (c_gravity * position.w * other.w / distance) * forceDirection;
	}

	particles[index].direction.xyz = direction.xyz;
}